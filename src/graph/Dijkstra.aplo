Dijkstra←{
    cost←⍵ ##.dict.Create 0 ⋄ cost.Default←⌊/⍬
    cameFrom←⍵ ##.dict.Create ⍵
    Neigh←⍺⍺
    Pick←{oldCost←cost ##.dict.Get ⍵⋄⍺<oldCost}
    _←{
        (queue queueItem)←##.heapq.Pop ⍵
        current←1⊃queueItem
        newCost←1+cost ##.dict.Get current
        valid←(newCost∘Pick¨n)/n←Neigh current             ⍝ New, or better?
        _←cameFrom ##.dict.Set (valid) ((≢valid)⍴⊂current) ⍝ Update path dictionary
        _←cost ##.dict.Set (valid) ((≢valid)⍴newCost)      ⍝ Any changed costs
        queue ##.heapq.Push ↓⍉↑((≢valid)⍴newCost)(valid)   ⍝ Enqueue connected nodes
    }⍣{##.heapq.Empty ⍺} ##.heapq.Push ⊂0 ⍵
    cameFrom
}
